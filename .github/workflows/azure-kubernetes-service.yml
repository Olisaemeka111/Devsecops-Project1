

name: Build and deploy an app to AKS

on:
  push:
    branches: ["main"]
  workflow_dispatch:

env:
  AZURE_CONTAINER_REGISTRY: "devsecopscontainerregistry2"
  CONTAINER_NAME: "devsecopsproject"
  RESOURCE_GROUP: "Devsecops_container_registry"
  CLUSTER_NAME: "Devsecopsk8s"
  DEPLOYMENT_MANIFEST_PATH: ".github/workflows/azure-kubernetes-service.yml"
  KUBECONFIG: /home/runner/work/_temp/kubeconfig_1704950947621

jobs:
  installAzureCLI:
    runs-on: ubuntu-latest
    steps:
      - name: Install Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

  buildImage:
    runs-on: ubuntu-latest
    needs: installAzureCLI
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Build and push image to ACR
        run: |
          az acr build --image ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ github.sha }} --registry ${{ env.AZURE_CONTAINER_REGISTRY }} -g ${{ env.RESOURCE_GROUP }} .

  deploy:
    runs-on: ubuntu-latest
    needs: [buildImage]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set up kubelogin for non-interactive login
        uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: 'v0.0.25'

      - name: Retrieve AKS Cluster's kubeconfig file
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: ${{ env.CLUSTER_NAME }}
          admin: 'false'
          use-kubelogin: 'true'

      - name: Deploy application
        uses: Azure/k8s-deploy@v4
        with:
          action: deploy
          manifests: ${{ env.DEPLOYMENT_MANIFEST_PATH }}
          images: |
            ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ github.sha }}

      - name: Display AKS Cluster Information
        run: az aks show --resource-group ${{ env.RESOURCE_GROUP }} --name ${{ env.CLUSTER_NAME }} --output table

      - name: Display AKS Pod Information
        run: kubectl get pods --namespace default

      - name: Display AKS Deployment Information
        run: kubectl describe deployment react-app-deployment --namespace default

      - name: Rollout Status
        run: kubectl rollout status deployment/react-app-deployment --namespace default

  createService:
    runs-on: ubuntu-latest
    needs: [deploy]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set up kubelogin for non-interactive login
        uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: 'v0.0.25'

      - name: Retrieve AKS Cluster's kubeconfig file
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: ${{ env.CLUSTER_NAME }}
          admin: 'false'
          use-kubelogin: 'true'

      - name: Apply Service manifest
        run: kubectl apply -f service.yaml --namespace default

  createIngress:
    runs-on: ubuntu-latest
    needs: [createService]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set up kubelogin for non-interactive login
        uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: 'v0.0.25'

      - name: Retrieve AKS Cluster's kubeconfig file
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: ${{ env.CLUSTER_NAME }}
          admin: 'false'
          use-kubelogin: 'true'

      - name: Apply Ingress manifest
        run: kubectl apply -f ingress.yaml --namespace default
